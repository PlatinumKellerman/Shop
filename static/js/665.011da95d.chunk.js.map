{"version":3,"file":"static/js/665.011da95d.chunk.js","mappings":"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","sources":["components/Loader/index.js","components/Loader/Loader.jsx","constants/apiConstants.js","components/PopularMovies/PopularMovies.styled.js","components/PopularMovies/index.js","components/PopularMovies/PopularMovies.jsx","components/PopularTvShows/PopularTvShows.styled.js","components/PopularTvShows/index.js","components/PopularTvShows/PopularTvShows.jsx","pages/Home/HomePage.styled.js","pages/Home/HomePage.jsx","pages/Home/index.js","services/fetchMovies.js"],"sourcesContent":["import Loader from './Loader';\n\nexport default Loader;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <>\n      <ThreeCircles\n        height=\"50\"\n        width=\"50\"\n        color=\"#86C232\"\n        wrapperStyle={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"#86C232\"\n        middleCircleColor=\"\"\n      />\n    </>\n  );\n};\n\nexport default Loader;\n","const constants = {\n  movieBaseUrl: 'https://api.themoviedb.org/3',\n  lang: 'en',\n  weatherBaseUrl: 'https://api.openweathermap.org/data/2.5/',\n  movieApiKey: process.env.REACT_APP_MOVIE_API_KEY,\n  weatherApiKey: process.env.REACT_APP_WEATHER_API_KEY,\n};\n\nexport default constants;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n  display: grid;\n  gap: 30px;\n  max-width: calc(100vw - 20px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  @media (min-width: ${p => p.theme.breakpoints.values.md}px) {\n    max-width: calc(100vw - 90px);\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.light};\n  text-shadow: ${p => p.theme.colors.dark} 1px 0px 0px,\n    ${p => p.theme.colors.dark} 0px 1px 0px,\n    ${p => p.theme.colors.dark} 0px -1px 0px,\n    ${p => p.theme.colors.dark} -1px 0px 0px;\n  transition-duration: 250ms;\n  transition-property: color;\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n\nexport const Poster = styled.img`\n  max-width: 300px;\n  object-fit: fill;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus,\n  &:active {\n    transform: scale(1.03);\n  }\n  border-radius: 20px;\n  margin-bottom: 10px;\n  @media (min-width: ${p => p.theme.breakpoints.values.md}px) {\n    max-width: 300px;\n    height: 450px;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  margin-bottom: 5px;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 30px;\n  &:last-child {\n    margin-bottom: 0px;\n  }\n`;\n","import PopularMovies from './PopularMovies';\n\nexport default PopularMovies;\n","import { Link } from 'react-router-dom';\nimport Container from 'layout/common/Container/Container';\n\nimport {\n  List,\n  ImgWrapper,\n  Poster,\n  MovieTitle,\n  ListItem,\n} from './PopularMovies.styled';\n\nconst PopularMovies = ({ movies, location }) => {\n  return (\n    <Container>\n      <List>\n        {movies.map(({ id, title, poster_path, release_date }) => (\n          <ListItem key={id}>\n            <Link to={`/movie-viewer/movies/${id}`} state={{ from: location }}>\n              <ImgWrapper>\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                ></Poster>\n                <MovieTitle>{title}</MovieTitle>\n                <MovieTitle>\n                  ({new Date(release_date).getUTCFullYear()})\n                </MovieTitle>\n              </ImgWrapper>\n            </Link>\n          </ListItem>\n        ))}\n      </List>\n    </Container>\n  );\n};\nexport default PopularMovies;\n","import styled from 'styled-components';\n\nexport const Item = styled.li``;\n\nexport const PosterWrapper = styled.div`\n  color: ${p => p.theme.colors.light};\n  transition-duration: 250ms;\n  transition-property: all;\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.colors.primary};\n    transform: scale(1.03);\n  }\n`;\n\nexport const Poster = styled.img`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 5px;\n  border-radius: 10px;\n  max-width: 150px;\n  height: auto;\n`;\n\nexport const ShowTitle = styled.p`\n  text-align: center;\n  margin-bottom: 5px;\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.s};\n  text-shadow: ${p => p.theme.colors.dark} 1px 0px 0px,\n    ${p => p.theme.colors.dark} 0px 1px 0px,\n    ${p => p.theme.colors.dark} 0px -1px 0px,\n    ${p => p.theme.colors.dark} -1px 0px 0px;\n`;\n","import PopularTvShows from './PopularTvShows';\n\nexport default PopularTvShows;\n","import Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Container from 'layout/common/Container/Container';\nimport { Link } from 'react-router-dom';\nimport {\n  Item,\n  PosterWrapper,\n  Poster,\n  ShowTitle,\n} from './PopularTvShows.styled';\n\nconst PopularTvShows = ({ shows, location }) => {\n  const settings = {\n    dots: true,\n    customPaging: function (i) {\n      return <span style={{ color: '#fff' }}>•</span>;\n    },\n    arrows: false,\n    infinite: true,\n    speed: 700,\n    slidesToShow: 8,\n    slidesToScroll: 1,\n    accessibility: false,\n    adaptiveHeight: true,\n    focusOnSelect: true,\n    autoplay: true,\n    autoplaySpeed: 2500,\n    centerMode: true,\n    centerPadding: '5px',\n    cssEase: 'ease-in-out',\n    vertical: false,\n    swipeToSlide: true,\n    responsive: [\n      {\n        breakpoint: 1201,\n        settings: {\n          slidesToShow: 5,\n        },\n      },\n      {\n        breakpoint: 769,\n        settings: {\n          slidesToShow: 3,\n        },\n      },\n      {\n        breakpoint: 481,\n        settings: {\n          slidesToShow: 2,\n        },\n      },\n    ],\n  };\n\n  return (\n    <Container>\n      <Slider {...settings}>\n        {shows.map(({ id, name, poster_path, first_air_date }) => (\n          <Item key={id}>\n            <Link\n              to={`/movie-viewer/tv-shows/${id}`}\n              state={{ from: location }}\n            >\n              <PosterWrapper>\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={name}\n                ></Poster>\n                <ShowTitle>{name}</ShowTitle>\n                <ShowTitle>\n                  {new Date(first_air_date).getUTCFullYear()}\n                </ShowTitle>\n              </PosterWrapper>\n            </Link>\n          </Item>\n        ))}\n      </Slider>\n    </Container>\n  );\n};\n\nexport default PopularTvShows;\n","import styled from 'styled-components';\n\nexport const HomePageTitle = styled.h2`\n  margin: 10px auto;\n  padding: 0 10px;\n  text-align: center;\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.dark};\n  text-shadow: ${p => p.theme.colors.primary} 1px 0px 0px,\n    ${p => p.theme.colors.primary} 0px 1px 0px,\n    ${p => p.theme.colors.primary} 0px -1px 0px,\n    ${p => p.theme.colors.primary} -1px 0px 0px;\n\n  @media (min-width: ${p => p.theme.breakpoints.values.md}px) {\n    font-size: ${p => p.theme.fontSizes.l};\n    margin: 30px auto;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Container from '../../layout/common/Container/Container';\nimport Loader from '../../components/Loader';\nimport {\n  getMostPopularMovies,\n  getMostPopularTvShows,\n} from '../../services/fetchMovies';\nimport PopularMovies from '../../components/PopularMovies';\nimport PopularTvShows from '../../components/PopularTvShows';\nimport { HomePageTitle } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [shows, setShows] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getPopularMovies = async () => {\n      try {\n        const response = await getMostPopularMovies();\n        setMovies(response);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    };\n    getPopularMovies();\n    setIsLoading(true);\n  }, []);\n\n  useEffect(() => {\n    const getPopularShows = async () => {\n      try {\n        const response = await getMostPopularTvShows();\n        setShows(response);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    };\n    getPopularShows();\n    setIsLoading(true);\n  }, []);\n\n  return (\n    <Container>\n      {isLoading ? (\n        <div>\n          <Loader />\n        </div>\n      ) : (\n        <>\n          <HomePageTitle>Most popular TV shows</HomePageTitle>\n          {shows && <PopularTvShows shows={shows} location={location} />}\n          <HomePageTitle>Trending movies for the WEEK</HomePageTitle>\n          {movies && <PopularMovies movies={movies} location={location} />}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\n\nexport default HomePage;\n","import axios from 'axios';\nimport constants from '../constants/apiConstants';\n\nconst instance = axios.create({\n  baseURL: constants.movieBaseUrl,\n  language: 'en-US',\n  params: {\n    api_key: constants.movieApiKey,\n    language: constants.lang,\n    page: 1,\n  },\n});\n\nexport async function getMostPopularMovies() {\n  const response = await instance.get(`/trending/movie/week`);\n  return response.data.results;\n}\n\nexport async function getMovieDetailsById(id) {\n  const response = await instance.get(`/movie/${id}`);\n  return response.data;\n}\n\n// export async function getMoviesByName(query) {\n//   const response = await instance.get(`/search/movie`, {\n//     params: {\n//       query,\n//     },\n//   });\n//   return response.data.results;\n// }\n\nexport async function searchMoviesAndTVShows(query) {\n  const response = await instance.get(`/search/multi`, {\n    params: {\n      query,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMostPopularTvShows() {\n  const response = await instance.get('/tv/top_rated');\n  return response.data.results;\n}\n\nexport async function getTvShowById(id) {\n  const response = await instance.get(`/tv/${id}`);\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await instance.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await instance.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getTvShowReviews(id) {\n  const response = await instance.get(`/tv/${id}/reviews`);\n  return response.data;\n}\n\nexport async function getTvShowCast(id) {\n  const response = await instance.get(`/tv/${id}/credits`);\n  return response.data;\n}\n"],"names":["height","width","color","wrapperStyle","display","justifyContent","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","movieBaseUrl","lang","weatherBaseUrl","movieApiKey","process","weatherApiKey","List","styled","p","theme","breakpoints","values","md","ImgWrapper","fonts","body","fontSizes","m","colors","light","dark","primary","Poster","MovieTitle","ListItem","movies","location","Container","map","id","title","poster_path","release_date","to","state","from","src","alt","Date","getUTCFullYear","Item","PosterWrapper","ShowTitle","s","shows","settings","dots","customPaging","i","style","arrows","infinite","speed","slidesToShow","slidesToScroll","accessibility","adaptiveHeight","focusOnSelect","autoplay","autoplaySpeed","centerMode","centerPadding","cssEase","vertical","swipeToSlide","responsive","breakpoint","name","first_air_date","HomePageTitle","l","useState","setMovies","setShows","isLoading","setIsLoading","useLocation","useEffect","getPopularMovies","getMostPopularMovies","response","toast","getPopularShows","getMostPopularTvShows","Loader","instance","axios","baseURL","constants","language","params","api_key","page","get","data","results","getMovieDetailsById","searchMoviesAndTVShows","query","getTvShowById","getMovieReviews","getMovieCast","getTvShowReviews","getTvShowCast"],"sourceRoot":""}