{"version":3,"file":"static/js/188.487f95fd.chunk.js","mappings":"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","sources":["components/Loader/index.js","components/Loader/Loader.jsx","constants/apiConstants.js","components/MovieDetails/MovieReviewsList/MovieReviewsList.styled.js","components/MovieDetails/MovieReviewsList/index.js","components/MovieDetails/MovieReviewsList/MovieReviewsList.jsx","pages/MovieInfo/MovieReviews/MovieReviews.styled.js","pages/MovieInfo/MovieReviews/MovieReviews.jsx","pages/MovieInfo/MovieReviews/index.js","services/fetchMovies.js"],"sourcesContent":["import Loader from './Loader';\n\nexport default Loader;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <>\n      <ThreeCircles\n        height=\"50\"\n        width=\"50\"\n        color=\"#86C232\"\n        wrapperStyle={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"#86C232\"\n        middleCircleColor=\"\"\n      />\n    </>\n  );\n};\n\nexport default Loader;\n","const constants = {\n  movieBaseUrl: 'https://api.themoviedb.org/3',\n  lang: 'en',\n  weatherBaseUrl: 'https://api.openweathermap.org/data/2.5/',\n  movieApiKey: process.env.REACT_APP_MOVIE_API_KEY,\n  weatherApiKey: process.env.REACT_APP_WEATHER_API_KEY,\n};\n\nexport default constants;\n","import styled from 'styled-components';\n\nexport const ReviewWrapper = styled.div`\n  padding: 10px;\n  background-color: ${p => p.theme.colors.dark};\n  border-radius: 20px;\n  @media (min-width: ${p => p.theme.breakpoints.values.lg}px) {\n    padding: 25px;\n  }\n`;\n\nexport const ReviewParams = styled.p`\n  margin-bottom: 10px;\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.xm};\n  color: ${p => p.theme.colors.secondary};\n  @media (min-width: ${p => p.theme.breakpoints.values.lg}px) {\n    font-size: ${p => p.theme.fontSizes.l};\n  }\n  &:last-child {\n    margin-bottom: 0px;\n  }\n`;\n\nexport const ReviewValue = styled.p`\n  letter-spacing: 2px;\n  margin-bottom: 20px;\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.xs};\n  color: ${p => p.theme.colors.grey};\n  margin-bottom: 40px;\n  @media (min-width: ${p => p.theme.breakpoints.values.lg}px) {\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n  &:last-child {\n    margin-bottom: 0px;\n  }\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n  width: 64px;\n  height: 64px;\n`;\n\nexport const AvatarPlug = styled.img`\n  border-radius: 50%;\n  width: 64px;\n  height: 64px;\n`;\n\nexport const ReviewDate = styled.span`\n  margin-left: 15px;\n  color: ${p => p.theme.colors.grey};\n  font-size: ${p => p.theme.fontSizes.xs};\n  @media (min-width: ${p => p.theme.breakpoints.values.lg}px) {\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n","import MovieReviewsList from './MovieReviewsList';\n\nexport default MovieReviewsList;\n","import moment from 'moment';\nimport {\n  ReviewWrapper,\n  ReviewParams,\n  ReviewValue,\n  ReviewItem,\n  Avatar,\n  AvatarPlug,\n  ReviewDate,\n} from './MovieReviewsList.styled';\nimport avatar_plug from '../../../assets/actor-plug-min.jpg';\n\nconst MovieReviewsList = ({ reviews }) => {\n  return (\n    <ReviewWrapper>\n      <ul>\n        {reviews.length > 0 &&\n          reviews.map(({ id, author, content, author_details, updated_at }) => (\n            <ReviewItem key={id}>\n              {author_details.avatar_path &&\n              author_details.avatar_path.startsWith('/') &&\n              !author_details.avatar_path.startsWith('/https:') ? (\n                <Avatar\n                  src={`https://www.themoviedb.org/t/p/original${author_details.avatar_path}`}\n                  alt={author_details.name}\n                />\n              ) : (\n                <AvatarPlug src={avatar_plug} alt={'Avatar Plug'} />\n              )}\n              <ReviewParams>\n                {author}\n                <ReviewDate>\n                  {`(${moment(updated_at).format('DD MMMM YYYY')})`}\n                </ReviewDate>\n              </ReviewParams>\n              <ReviewValue>{content}</ReviewValue>\n            </ReviewItem>\n          ))}\n      </ul>\n    </ReviewWrapper>\n  );\n};\n\nexport default MovieReviewsList;\n","import styled from 'styled-components';\n\nexport const ReviewPlug = styled.p`\n  color: ${p => p.theme.colors.accent};\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  font-size: 24px;\n  font-weight: 600;\n  margin: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieReviews } from '../../../services/fetchMovies';\nimport Loader from 'components/Loader';\nimport MovieReviewsList from 'components/MovieDetails/MovieReviewsList';\nimport { ReviewPlug } from './MovieReviews.styled';\n\nconst MovieReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.results);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    };\n    movieReviews();\n    setIsLoading(true);\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {reviews.length > 0 ? (\n        <MovieReviewsList reviews={reviews} />\n      ) : (\n        <ReviewPlug>\n          Sorry. We don't have any reviews for this movie.{' '}\n        </ReviewPlug>\n      )}\n    </div>\n  );\n};\n\nexport default MovieReviews;\n","import MovieReviews from './MovieReviews';\n\nexport default MovieReviews;\n","import axios from 'axios';\nimport constants from '../constants/apiConstants';\n\nconst instance = axios.create({\n  baseURL: constants.movieBaseUrl,\n  language: 'en-US',\n  params: {\n    api_key: constants.movieApiKey,\n    language: constants.lang,\n    page: 1,\n  },\n});\n\nexport async function getMostPopularMovies(pageNumber) {\n  const params = { ...instance.defaults.params };\n  params.page = pageNumber;\n\n  const response = await instance.get(`/trending/movie/week`, { params });\n\n  return response.data.results;\n}\n\nexport async function getMovieDetailsById(id) {\n  const response = await instance.get(`/movie/${id}`);\n  return response.data;\n}\n\n// export async function getMoviesByName(query) {\n//   const response = await instance.get(`/search/movie`, {\n//     params: {\n//       query,\n//     },\n//   });\n//   return response.data.results;\n// }\n\nexport async function searchMoviesAndTVShows(query) {\n  const response = await instance.get(`/search/multi`, {\n    params: {\n      query,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMostPopularTvShows() {\n  const response = await instance.get('/tv/top_rated');\n  return response.data.results;\n}\n\nexport async function getTvShowById(id) {\n  const response = await instance.get(`/tv/${id}`);\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await instance.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await instance.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getTvShowReviews(id) {\n  const response = await instance.get(`/tv/${id}/reviews`);\n  return response.data;\n}\n\nexport async function getTvShowCast(id) {\n  const response = await instance.get(`/tv/${id}/credits`);\n  return response.data;\n}\n\nexport async function getActorId(query) {\n  const response = await instance.get('/search/person', {\n    params: {\n      query,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getImages(movie_id) {\n  const response = await instance.get(`/movie/${movie_id}/images`, {\n    params: {\n      movie_id,\n    },\n  });\n  return response;\n}\n"],"names":["height","width","color","wrapperStyle","display","justifyContent","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","movieBaseUrl","lang","weatherBaseUrl","movieApiKey","process","weatherApiKey","ReviewWrapper","styled","p","theme","colors","dark","breakpoints","values","lg","ReviewParams","fonts","body","fontSizes","xm","secondary","l","ReviewValue","xs","grey","m","ReviewItem","Avatar","AvatarPlug","ReviewDate","reviews","length","map","id","author","content","author_details","updated_at","avatar_path","startsWith","src","alt","name","avatar_plug","moment","format","ReviewPlug","accent","movieId","useParams","useState","setReviews","isLoading","setIsLoading","useEffect","movieReviews","getMovieReviews","response","results","toast","Loader","instance","axios","baseURL","constants","language","params","api_key","page","getMostPopularMovies","pageNumber","defaults","get","data","getMovieDetailsById","searchMoviesAndTVShows","query","getMostPopularTvShows","getTvShowById","getMovieCast","getTvShowReviews","getTvShowCast","getImages","movie_id"],"sourceRoot":""}