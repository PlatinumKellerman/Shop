{"version":3,"file":"static/js/597.8fbfca9d.chunk.js","mappings":"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","sources":["components/Loader/index.js","components/Loader/Loader.jsx","constants/apiConstants.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/index.js","components/SearchForm/SearchForm.jsx","components/FoundMedia/FoundMedia.styled.js","components/FoundMedia/index.js","components/FoundMedia/FoundMedia.jsx","pages/MediaSearchPage/MediaSearchPage.styled.js","pages/MediaSearchPage/MediaSearchPage.jsx","pages/MediaSearchPage/index.js","services/fetchMovies.js"],"sourcesContent":["import Loader from './Loader';\n\nexport default Loader;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <>\n      <ThreeCircles\n        height=\"50\"\n        width=\"50\"\n        color=\"#86C232\"\n        wrapperStyle={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"#86C232\"\n        middleCircleColor=\"\"\n      />\n    </>\n  );\n};\n\nexport default Loader;\n","const constants = {\n  movieBaseUrl: 'https://api.themoviedb.org/3',\n  lang: 'en',\n  weatherBaseUrl: 'https://api.openweathermap.org/data/2.5/',\n  movieApiKey: process.env.REACT_APP_MOVIE_API_KEY,\n  weatherApiKey: process.env.REACT_APP_WEATHER_API_KEY,\n};\n\nexport default constants;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin-bottom: 20px;\n`;\n\nexport const SearchInput = styled(Field)`\n  width: auto;\n  background-color: ${p => p.theme.colors.muted};\n  margin-bottom: 20px;\n  font-size: ${p => p.theme.fontSizes.m};\n  border-radius: 8px;\n  border: 1px solid ${p => p.theme.colors.primary};\n  outline: none;\n  padding: 5px;\n  margin-top: 10px;\n  ::placeholder {\n    font-size: ${p => p.theme.fontSizes.m};\n    text-align: center;\n  }\n  &:hover,\n  :focus,\n  :active {\n    background-color: ${p => p.theme.colors.light};\n    border: 1px solid ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.dark};\n    transition-duration: 500ms;\n    transition-timing-function: $timing-function;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  width: auto;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 5px 20px;\n  background-color: ${p => p.theme.colors.muted};\n  border: 1px solid ${p => p.theme.colors.primary};\n  border-radius: 8px;\n  color: ${p => p.theme.colors.dark};\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.m};\n  &:hover,\n  :focus,\n  :active {\n    background-color: ${p => p.theme.colors.accent};\n    border: 1px solid ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.light};\n    transition-duration: 500ms;\n    transition-timing-function: $timing-function;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  font-size: 16px;\n  padding: 5px;\n  text-align: center;\n`;\n","import SearchForm from './SearchForm';\n\nexport default SearchForm;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  SearchInput,\n  SearchButton,\n  StyledForm,\n  ErrorText,\n} from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const schema = yup.object().shape({\n    query: yup.string().required('Search field cannot be empty'),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    onSubmit(values);\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ query: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <SearchInput\n            name=\"query\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n          <SearchButton type=\"submit\">Search</SearchButton>\n          <ErrorMessage\n            render={message => <ErrorText>{message}</ErrorText>}\n            name=\"query\"\n          />\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n  display: grid;\n  gap: 30px;\n  max-width: calc(100vw - 20px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  @media (min-width: ${p => p.theme.breakpoints.values.md}px) {\n    max-width: calc(100vw - 90px);\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Poster = styled.img`\n  max-width: 300px;\n  object-fit: fill;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n  }\n  border-radius: 20px;\n  margin-bottom: 10px;\n  @media (min-width: ${p => p.theme.breakpoints.values.md}px) {\n    max-width: 300px;\n    height: 450px;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.light};\n  text-shadow: ${p => p.theme.colors.dark} 1px 0px 0px,\n    ${p => p.theme.colors.dark} 0px 1px 0px,\n    ${p => p.theme.colors.dark} 0px -1px 0px,\n    ${p => p.theme.colors.dark} -1px 0px 0px;\n`;\nexport const MovieYear = styled.p`\n  font-family: ${p => p.theme.fonts.body};\n  color: ${p => p.theme.colors.light};\n  text-shadow: ${p => p.theme.colors.dark} 1px 0px 0px,\n    ${p => p.theme.colors.dark} 0px 1px 0px,\n    ${p => p.theme.colors.dark} 0px -1px 0px,\n    ${p => p.theme.colors.dark} -1px 0px 0px;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 30px;\n  &:last-child {\n    margin-bottom: 0px;\n  }\n`;\n\nexport const PosterPlug = styled.img`\n  max-width: 300px;\n  object-fit: fill;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n  }\n  border-radius: 20px;\n  margin-bottom: 10px;\n  @media (min-width: ${p => p.theme.breakpoints.values.md}px) {\n    max-width: 300px;\n    height: 450px;\n  }\n`;\n","import FoundMedia from './FoundMedia';\n\nexport default FoundMedia;\n","import { Link } from 'react-router-dom';\nimport poster_plug from '../../assets/poster_plug-min.jpg';\nimport {\n  List,\n  ImgWrapper,\n  Poster,\n  MovieTitle,\n  ListItem,\n  MovieYear,\n  PosterPlug,\n} from './FoundMedia.styled';\n\nconst FoundMedia = ({ media, location }) => {\n  return (\n    <List>\n      {media.map(\n        ({\n          id,\n          title,\n          name,\n          poster_path,\n          release_date,\n          media_type,\n          first_air_date,\n        }) => (\n          <ListItem key={id}>\n            <Link\n              to={\n                media_type === 'movie'\n                  ? `/movie-viewer/movies/${id}`\n                  : `/movie-viewer/tv-shows/${id}`\n              }\n              state={{ from: location }}\n            >\n              <ImgWrapper>\n                {poster_path ? (\n                  <Poster\n                    src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                    alt={title || name}\n                  ></Poster>\n                ) : (\n                  <PosterPlug src={poster_plug} alt={'Poster Plug'} />\n                )}\n                <MovieTitle>{title || name}</MovieTitle>\n                <MovieYear>\n                  {media_type === 'movie' && release_date\n                    ? new Date(release_date).getUTCFullYear()\n                    : media_type === 'tv' && first_air_date\n                    ? new Date(first_air_date).getUTCFullYear()\n                    : 'No info'}\n                </MovieYear>\n              </ImgWrapper>\n            </Link>\n          </ListItem>\n        )\n      )}\n    </List>\n  );\n};\n\nexport default FoundMedia;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const SearchFormWrapper = styled.div`\n  width: auto;\n  margin: 30px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const BackLink = styled(Link)`\n  width: auto;\n  margin-bottom: 50px;\n  padding: 5px 20px;\n  border: 1px solid ${p => p.theme.colors.primary};\n  border-radius: 8px;\n  color: ${p => p.theme.colors.light};\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.s};\n  background-color: transparent;\n  &:hover,\n  :focus,\n  :active {\n    background-color: ${p => p.theme.colors.accent};\n    border: 1px solid ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.light};\n    transition-duration: 500ms;\n    transition-timing-function: $timing-function;\n  }\n`;\n","import SearchForm from '../../components/SearchForm';\nimport Loader from '../../components/Loader';\nimport FoundMedia from '../../components/FoundMedia';\nimport { searchMoviesAndTVShows } from '../../services/fetchMovies';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchFormWrapper, BackLink } from './MediaSearchPage.styled';\n\nconst MediaSearchPage = () => {\n  const [media, setMedia] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('query') ?? '';\n  const backLinkHref = location.state?.from ?? '/movie-viewer';\n\n  useEffect(() => {\n    if (name === '' || name === null) return;\n    async function moviesByName() {\n      try {\n        const results = await searchMoviesAndTVShows(name);\n        const moviesAndTVShows = results.filter(\n          item => item.media_type === 'movie' || item.media_type === 'tv'\n        );\n        setMedia(moviesAndTVShows);\n        setIsLoading(false);\n        if (moviesAndTVShows.length === 0) {\n          toast.error(`Sorry, there are no movies for this request.`);\n        }\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    }\n    if (name) {\n      moviesByName();\n      setIsLoading(true);\n    }\n  }, [name]);\n\n  const handleMovieNameSubmit = name => {\n    if (name) {\n      setSearchParams(name);\n    }\n  };\n\n  return (\n    <SearchFormWrapper>\n      <BackLink to={backLinkHref}>\n        {'<-'} {''} Go Back\n      </BackLink>\n      <SearchForm onSubmit={handleMovieNameSubmit} />\n      {isLoading && <Loader />}\n      {media && <FoundMedia media={media} location={location} />}\n    </SearchFormWrapper>\n  );\n};\n\nexport default MediaSearchPage;\n","import MediaSearchPage from './MediaSearchPage';\n\nexport default MediaSearchPage;\n","import axios from 'axios';\nimport constants from '../constants/apiConstants';\n\nconst instance = axios.create({\n  baseURL: constants.movieBaseUrl,\n  language: 'en-US',\n  params: {\n    api_key: constants.movieApiKey,\n    language: constants.lang,\n    page: 1,\n  },\n});\n\nexport async function getMostPopularMovies() {\n  const response = await instance.get(`/trending/movie/week`);\n  return response.data.results;\n}\n\nexport async function getMovieDetailsById(id) {\n  const response = await instance.get(`/movie/${id}`);\n  return response.data;\n}\n\n// export async function getMoviesByName(query) {\n//   const response = await instance.get(`/search/movie`, {\n//     params: {\n//       query,\n//     },\n//   });\n//   return response.data.results;\n// }\n\nexport async function searchMoviesAndTVShows(query) {\n  const response = await instance.get(`/search/multi`, {\n    params: {\n      query,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMostPopularTvShows() {\n  const response = await instance.get('/tv/top_rated');\n  return response.data.results;\n}\n\nexport async function getTvShowById(id) {\n  const response = await instance.get(`/tv/${id}`);\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await instance.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await instance.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getTvShowReviews(id) {\n  const response = await instance.get(`/tv/${id}/reviews`);\n  return response.data;\n}\n\nexport async function getTvShowCast(id) {\n  const response = await instance.get(`/tv/${id}/credits`);\n  return response.data;\n}\n"],"names":["height","width","color","wrapperStyle","display","justifyContent","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","movieBaseUrl","lang","weatherBaseUrl","movieApiKey","process","weatherApiKey","StyledForm","styled","Form","SearchInput","Field","p","theme","colors","muted","fontSizes","m","primary","light","accent","dark","SearchButton","fonts","body","ErrorText","onSubmit","schema","yup","shape","query","required","initialValues","validationSchema","values","resetForm","name","type","autoComplete","autoFocus","placeholder","render","message","List","breakpoints","md","ImgWrapper","Poster","MovieTitle","MovieYear","ListItem","PosterPlug","media","location","map","id","title","poster_path","release_date","media_type","first_air_date","to","state","from","src","alt","poster_plug","Date","getUTCFullYear","SearchFormWrapper","BackLink","Link","s","useState","setMedia","isLoading","setIsLoading","useLocation","useSearchParams","searchParams","setSearchParams","get","backLinkHref","useEffect","searchMoviesAndTVShows","results","moviesAndTVShows","filter","item","length","toast","moviesByName","Loader","instance","axios","baseURL","constants","language","params","api_key","page","getMostPopularMovies","response","data","getMovieDetailsById","getMostPopularTvShows","getTvShowById","getMovieReviews","getMovieCast","getTvShowReviews","getTvShowCast"],"sourceRoot":""}